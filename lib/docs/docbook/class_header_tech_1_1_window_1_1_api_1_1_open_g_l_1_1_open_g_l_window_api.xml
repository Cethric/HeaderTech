<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api" xml:lang="en-US">
<title>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi Class Reference</title>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary></indexterm>
<para>
<computeroutput>#include &lt;OpenGLWindowApi.h&gt;</computeroutput>
</para>
Inheritance diagram for HeaderTech::Window::Api::OpenGL::OpenGLWindowApi:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api__inherit__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Collaboration diagram for HeaderTech::Window::Api::OpenGL::OpenGLWindowApi:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a75e989329acdee8b4c20261136bfaedc">OpenGLWindowApi</link> (const <link linkend="_struct_header_tech_1_1_config_1_1_window_config">HeaderTech::Config::WindowConfig</link> &amp;config, <link linkend="_class_header_tech_1_1_events_1_1_event_dispatcher">HeaderTech::Events::EventDispatcher</link> *dispatcher, GLFWwindow *shared=nullptr) noexcept</para>
</listitem>
            <listitem><para><link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a885b80f564a49854e4818ff574dfad58">~OpenGLWindowApi</link> () noexcept final</para>
</listitem>
            <listitem><para>bool <link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a423b3b4494c694f73b2733ea98f9493d">IsOpen</link> () noexcept final</para>
</listitem>
            <listitem><para>void <link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1ae0f85487773e93bb08e84d3e8bb99256">SwapBuffers</link> () noexcept final</para>
</listitem>
            <listitem><para>void <link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1affd8ea0629144010767d1072c427da50">ToggleFullscreen</link> () noexcept final</para>
</listitem>
            <listitem><para>void <link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1aacdf12e27034d400555a8df31d4666f6">MakeCurrent</link> () noexcept final</para>
</listitem>
            <listitem><para>GLFWwindow * <link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a8708b425b650630d835acee99e6eae40">GetOwnedWindow</link> () const noexcept</para>
</listitem>
            <listitem><para>glm::ivec2 <link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a2e115e7d6d6b783568ad24051cb4b877">GetSize</link> () const noexcept final</para>
</listitem>
            <listitem><para>bool <link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a8447f2c03fc9bf11ff39001844f7f25e">IsKeyPressed</link> (<link linkend="_namespace_header_tech_1_1_core_1a4c6df79f1ee8ed7a8e0d01e6af5740c7">HeaderTech::Core::KeyType</link> key) const noexcept final</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1af781e46028bdee957977621c2f87e5d7">LinkEvents</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>GLFWwindow * <link linkend="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1adbd09f3ed2694e54b491a8a9d66a506b">m_window</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line 18 of file OpenGLWindowApi.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a75e989329acdee8b4c20261136bfaedc"/>    <section>
    <title>OpenGLWindowApi()</title>
<indexterm><primary>OpenGLWindowApi</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>OpenGLWindowApi</secondary></indexterm>
<para><computeroutput>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::OpenGLWindowApi (const <link linkend="_struct_header_tech_1_1_config_1_1_window_config">HeaderTech::Config::WindowConfig</link> &amp; config, <link linkend="_class_header_tech_1_1_events_1_1_event_dispatcher">HeaderTech::Events::EventDispatcher</link> * dispatcher, GLFWwindow * shared = <computeroutput>nullptr</computeroutput>
)<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 21 of file OpenGLWindowApi.inl.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a885b80f564a49854e4818ff574dfad58"/>    <section>
    <title>~OpenGLWindowApi()</title>
<indexterm><primary>~OpenGLWindowApi</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>~OpenGLWindowApi</secondary></indexterm>
<para><computeroutput>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::~OpenGLWindowApi ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 39 of file OpenGLWindowApi.inl.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a8708b425b650630d835acee99e6eae40"/>    <section>
    <title>GetOwnedWindow()</title>
<indexterm><primary>GetOwnedWindow</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>GetOwnedWindow</secondary></indexterm>
<para><computeroutput>GLFWwindow * HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::GetOwnedWindow ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 92 of file OpenGLWindowApi.inl.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_a8708b425b650630d835acee99e6eae40_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a2e115e7d6d6b783568ad24051cb4b877"/>    <section>
    <title>GetSize()</title>
<indexterm><primary>GetSize</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>GetSize</secondary></indexterm>
<para><computeroutput>glm::ivec2 HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::GetSize ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_header_tech_1_1_core_1_1_api_1_1_window_1_1_window_api_1af81bd84c0a58e808170dfc9404ee5aec">HeaderTech::Core::Api::Window::WindowApi</link>.</para>
<para>
Definition at line 95 of file OpenGLWindowApi.inl.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a8447f2c03fc9bf11ff39001844f7f25e"/>    <section>
    <title>IsKeyPressed()</title>
<indexterm><primary>IsKeyPressed</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>IsKeyPressed</secondary></indexterm>
<para><computeroutput>bool HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::IsKeyPressed (<link linkend="_namespace_header_tech_1_1_core_1a4c6df79f1ee8ed7a8e0d01e6af5740c7">HeaderTech::Core::KeyType</link> key) const<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_header_tech_1_1_core_1_1_api_1_1_window_1_1_window_api_1adfc22970d5ab0f1bd6dcb5123b2528bf">HeaderTech::Core::Api::Window::WindowApi</link>.</para>
<para>
Definition at line 102 of file OpenGLWindowApi.inl.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1a423b3b4494c694f73b2733ea98f9493d"/>    <section>
    <title>IsOpen()</title>
<indexterm><primary>IsOpen</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>IsOpen</secondary></indexterm>
<para><computeroutput>bool HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::IsOpen ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_header_tech_1_1_core_1_1_api_1_1_window_1_1_window_api_1a5eea00859eb93f983cb40848edacf9cc">HeaderTech::Core::Api::Window::WindowApi</link>.</para>
<para>
Definition at line 45 of file OpenGLWindowApi.inl.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1af781e46028bdee957977621c2f87e5d7"/>    <section>
    <title>LinkEvents()</title>
<indexterm><primary>LinkEvents</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>LinkEvents</secondary></indexterm>
<para><computeroutput>void HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::LinkEvents ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 177 of file OpenGLWindowApiEvents.inl.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1aacdf12e27034d400555a8df31d4666f6"/>    <section>
    <title>MakeCurrent()</title>
<indexterm><primary>MakeCurrent</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>MakeCurrent</secondary></indexterm>
<para><computeroutput>void HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::MakeCurrent ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_header_tech_1_1_core_1_1_api_1_1_window_1_1_window_api_1a1264cad86326a0fba8f96277f8aac754">HeaderTech::Core::Api::Window::WindowApi</link>.</para>
<para>
Definition at line 89 of file OpenGLWindowApi.inl.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1ae0f85487773e93bb08e84d3e8bb99256"/>    <section>
    <title>SwapBuffers()</title>
<indexterm><primary>SwapBuffers</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>SwapBuffers</secondary></indexterm>
<para><computeroutput>void HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::SwapBuffers ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_header_tech_1_1_core_1_1_api_1_1_window_1_1_window_api_1aa9ad50e9c077b56b57821b5e09356e33">HeaderTech::Core::Api::Window::WindowApi</link>.</para>
<para>
Definition at line 48 of file OpenGLWindowApi.inl.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1affd8ea0629144010767d1072c427da50"/>    <section>
    <title>ToggleFullscreen()</title>
<indexterm><primary>ToggleFullscreen</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>ToggleFullscreen</secondary></indexterm>
<para><computeroutput>void HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::ToggleFullscreen ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[final]</computeroutput>, <computeroutput>[virtual]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_header_tech_1_1_core_1_1_api_1_1_window_1_1_window_api_1aab0ce36dc7595e2b3f4b8bd6454d5681">HeaderTech::Core::Api::Window::WindowApi</link>.</para>
<para>
Definition at line 51 of file OpenGLWindowApi.inl.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_header_tech_1_1_window_1_1_api_1_1_open_g_l_1_1_open_g_l_window_api_1adbd09f3ed2694e54b491a8a9d66a506b"/>    <section>
    <title>m_window</title>
<indexterm><primary>m_window</primary><secondary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Api::OpenGL::OpenGLWindowApi</primary><secondary>m_window</secondary></indexterm>
<para><computeroutput>GLFWwindow* HeaderTech::Window::Api::OpenGL::OpenGLWindowApi::m_window<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 46 of file OpenGLWindowApi.h.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
window/inc/api/opengl/<link linkend="__open_g_l_window_api_8h">OpenGLWindowApi.h</link>window/inc/api/opengl/<link linkend="__open_g_l_window_api_8inl">OpenGLWindowApi.inl</link>window/inc/api/opengl/<link linkend="__open_g_l_window_api_events_8inl">OpenGLWindowApiEvents.inl</link></section>
</section>
