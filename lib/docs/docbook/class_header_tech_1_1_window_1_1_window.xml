<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_header_tech_1_1_window_1_1_window" xml:lang="en-US">
<title>HeaderTech::Window::Window Class Reference</title>
<indexterm><primary>HeaderTech::Window::Window</primary></indexterm>
<para>
<computeroutput>#include &lt;Window.h&gt;</computeroutput>
</para>
Collaboration diagram for HeaderTech::Window::Window:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_header_tech_1_1_window_1_1_window__coll__graph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_header_tech_1_1_window_1_1_window_1a4de301bb7b242cc1d8af2df9734a45bc">Window</link> (const <link linkend="_struct_header_tech_1_1_config_1_1_window_config">HeaderTech::Config::WindowConfig</link> &amp;config, <link linkend="_class_header_tech_1_1_events_1_1_event_dispatcher">HeaderTech::Events::EventDispatcher</link> *dispatcher) noexcept</para>
</listitem>
            <listitem><para><link linkend="_class_header_tech_1_1_window_1_1_window_1a6fb2d06427ca02998081306150ab463c">~Window</link> () noexcept</para>
</listitem>
            <listitem><para>bool <link linkend="_class_header_tech_1_1_window_1_1_window_1a81f0111e981e0cab73c1b89027f1cd82">IsOpen</link> () noexcept</para>
</listitem>
            <listitem><para>void <link linkend="_class_header_tech_1_1_window_1_1_window_1a73756e7981b02da96c69195aacfc4f91">Swap</link> () noexcept</para>
</listitem>
            <listitem><para>void <link linkend="_class_header_tech_1_1_window_1_1_window_1a20a5d247b7ee18cae41ed6103e6d9ee8">ToggleFullscreen</link> () noexcept</para>
</listitem>
            <listitem><para>glm::ivec2 <link linkend="_class_header_tech_1_1_window_1_1_window_1afcd4213a24e9d8efddd149670b472ee8">GetSize</link> () const noexcept</para>
</listitem>
            <listitem><para><link linkend="_class_header_tech_1_1_render_1_1_render_context">HeaderTech::Render::RenderContext</link> * <link linkend="_class_header_tech_1_1_window_1_1_window_1a5f5d2ae745a2e1d509f64f1646ab55c2">GetRenderContext</link> () const noexcept</para>
</listitem>
            <listitem><para>bool <link linkend="_class_header_tech_1_1_window_1_1_window_1a5520885ff89f423c759a9b734932f812">IsKeyPressed</link> (<link linkend="_namespace_header_tech_1_1_core_1a4c6df79f1ee8ed7a8e0d01e6af5740c7">HeaderTech::Core::KeyType</link> key) const noexcept</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_header_tech_1_1_core_1_1_api_1_1_window_1_1_window_api">HeaderTech::Core::Api::Window::WindowApi</link> * <link linkend="_class_header_tech_1_1_window_1_1_window_1aa0306963370cccdee6fcad2d11b9aa66">m_api</link></para>
</listitem>
            <listitem><para><link linkend="_class_header_tech_1_1_render_1_1_render_context">HeaderTech::Render::RenderContext</link> * <link linkend="_class_header_tech_1_1_window_1_1_window_1a1ec346cb9e655dc0cda3d7b60459bad7">m_context</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line 23 of file Window.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_header_tech_1_1_window_1_1_window_1a4de301bb7b242cc1d8af2df9734a45bc"/>    <section>
    <title>Window()</title>
<indexterm><primary>Window</primary><secondary>HeaderTech::Window::Window</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Window</primary><secondary>Window</secondary></indexterm>
<para><computeroutput>HeaderTech::Window::Window::Window (const <link linkend="_struct_header_tech_1_1_config_1_1_window_config">HeaderTech::Config::WindowConfig</link> &amp; config, <link linkend="_class_header_tech_1_1_events_1_1_event_dispatcher">HeaderTech::Events::EventDispatcher</link> * dispatcher)<computeroutput>[inline]</computeroutput>, <computeroutput>[explicit]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 15 of file Window.inl.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_window_1a6fb2d06427ca02998081306150ab463c"/>    <section>
    <title>~Window()</title>
<indexterm><primary>~Window</primary><secondary>HeaderTech::Window::Window</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Window</primary><secondary>~Window</secondary></indexterm>
<para><computeroutput>HeaderTech::Window::Window::~Window ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 38 of file Window.inl.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_header_tech_1_1_window_1_1_window_1a5f5d2ae745a2e1d509f64f1646ab55c2"/>    <section>
    <title>GetRenderContext()</title>
<indexterm><primary>GetRenderContext</primary><secondary>HeaderTech::Window::Window</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Window</primary><secondary>GetRenderContext</secondary></indexterm>
<para><computeroutput><link linkend="_class_header_tech_1_1_render_1_1_render_context">HeaderTech::Render::RenderContext</link> * HeaderTech::Window::Window::GetRenderContext ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 56 of file Window.inl.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_window_1afcd4213a24e9d8efddd149670b472ee8"/>    <section>
    <title>GetSize()</title>
<indexterm><primary>GetSize</primary><secondary>HeaderTech::Window::Window</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Window</primary><secondary>GetSize</secondary></indexterm>
<para><computeroutput>glm::ivec2 HeaderTech::Window::Window::GetSize ( ) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 53 of file Window.inl.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_header_tech_1_1_window_1_1_window_afcd4213a24e9d8efddd149670b472ee8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_window_1a5520885ff89f423c759a9b734932f812"/>    <section>
    <title>IsKeyPressed()</title>
<indexterm><primary>IsKeyPressed</primary><secondary>HeaderTech::Window::Window</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Window</primary><secondary>IsKeyPressed</secondary></indexterm>
<para><computeroutput>bool HeaderTech::Window::Window::IsKeyPressed (<link linkend="_namespace_header_tech_1_1_core_1a4c6df79f1ee8ed7a8e0d01e6af5740c7">HeaderTech::Core::KeyType</link> key) const<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 59 of file Window.inl.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_window_1a81f0111e981e0cab73c1b89027f1cd82"/>    <section>
    <title>IsOpen()</title>
<indexterm><primary>IsOpen</primary><secondary>HeaderTech::Window::Window</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Window</primary><secondary>IsOpen</secondary></indexterm>
<para><computeroutput>bool HeaderTech::Window::Window::IsOpen ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 44 of file Window.inl.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_header_tech_1_1_window_1_1_window_a81f0111e981e0cab73c1b89027f1cd82_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_header_tech_1_1_window_1_1_window_a81f0111e981e0cab73c1b89027f1cd82_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_window_1a73756e7981b02da96c69195aacfc4f91"/>    <section>
    <title>Swap()</title>
<indexterm><primary>Swap</primary><secondary>HeaderTech::Window::Window</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Window</primary><secondary>Swap</secondary></indexterm>
<para><computeroutput>void HeaderTech::Window::Window::Swap ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 47 of file Window.inl.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_header_tech_1_1_window_1_1_window_a73756e7981b02da96c69195aacfc4f91_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_header_tech_1_1_window_1_1_window_a73756e7981b02da96c69195aacfc4f91_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_window_1a20a5d247b7ee18cae41ed6103e6d9ee8"/>    <section>
    <title>ToggleFullscreen()</title>
<indexterm><primary>ToggleFullscreen</primary><secondary>HeaderTech::Window::Window</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Window</primary><secondary>ToggleFullscreen</secondary></indexterm>
<para><computeroutput>void HeaderTech::Window::Window::ToggleFullscreen ( )<computeroutput>[inline]</computeroutput>, <computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 50 of file Window.inl.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_header_tech_1_1_window_1_1_window_a20a5d247b7ee18cae41ed6103e6d9ee8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_header_tech_1_1_window_1_1_window_1aa0306963370cccdee6fcad2d11b9aa66"/>    <section>
    <title>m_api</title>
<indexterm><primary>m_api</primary><secondary>HeaderTech::Window::Window</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Window</primary><secondary>m_api</secondary></indexterm>
<para><computeroutput><link linkend="_class_header_tech_1_1_core_1_1_api_1_1_window_1_1_window_api">HeaderTech::Core::Api::Window::WindowApi</link>* HeaderTech::Window::Window::m_api<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 45 of file Window.h.</para>
    </section><anchor xml:id="_class_header_tech_1_1_window_1_1_window_1a1ec346cb9e655dc0cda3d7b60459bad7"/>    <section>
    <title>m_context</title>
<indexterm><primary>m_context</primary><secondary>HeaderTech::Window::Window</secondary></indexterm>
<indexterm><primary>HeaderTech::Window::Window</primary><secondary>m_context</secondary></indexterm>
<para><computeroutput><link linkend="_class_header_tech_1_1_render_1_1_render_context">HeaderTech::Render::RenderContext</link>* HeaderTech::Window::Window::m_context<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line 46 of file Window.h.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
window/inc/<link linkend="__window_8h">Window.h</link>window/inc/<link linkend="__window_8inl">Window.inl</link></section>
</section>
