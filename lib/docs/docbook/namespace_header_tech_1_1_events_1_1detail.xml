<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_header_tech_1_1_events_1_1detail" xml:lang="en-US">
<title>HeaderTech::Events::detail Namespace Reference</title>
<indexterm><primary>HeaderTech::Events::detail</primary></indexterm>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>template&lt;EventType EventClass&gt; </para><para><link linkend="_namespace_header_tech_1_1_events_1_1detail_1ad20bf18f6da5896af7bc149aaaff6a1f">__declspec</link> (noalias) static inline void event_destructor(void *event) <link linkend="_namespace_header_tech_1_1_events_1_1detail_1afe6bc6e32140bfb1db6be0bad6914b7f">noexcept</link></para>
</listitem>
            <listitem><para>template&lt;EventType EventName, typename EventCallback &gt; </para><para>struct <link linkend="_namespace_header_tech_1_1_events_1_1detail_1abc085866ca019e174383b4a05e192fb9">__declspec</link> (novtable) SubscriptionBase</para>
</listitem>
            <listitem><para>template&lt;EventType EventName, typename EventFunction &gt; </para><para><link linkend="_namespace_header_tech_1_1_events_1_1detail_1aa130068865141ec36662732ba0fb330a">__declspec</link> (noalias) static const expr inline void subscription_destructor(void *function) <link linkend="_namespace_header_tech_1_1_events_1_1detail_1afe6bc6e32140bfb1db6be0bad6914b7f">noexcept</link></para>
</listitem>
            <listitem><para><link linkend="_namespace_header_tech_1_1_events_1_1detail_1ace13bc1197f21344a435bf289ba95da5">if</link> (<link linkend="_namespace_header_tech_1_1_events_1_1detail_1a6f44eb79b01ca27d780e15e8fc1287ae">cast</link>)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_namespace_header_tech_1_1_events_1af202cf6097b6a15cbdd5d4090c7c5368">EventPtr</link> &amp;event <link linkend="_namespace_header_tech_1_1_events_1_1detail_1afe6bc6e32140bfb1db6be0bad6914b7f">noexcept</link></para>
</listitem>
            <listitem><para>auto <link linkend="_namespace_header_tech_1_1_events_1_1detail_1a749cb59b304c739d73f90e65010a40d6">base</link> = static_cast&lt;Caller *&gt;(function)</para>
</listitem>
            <listitem><para>auto <link linkend="_namespace_header_tech_1_1_events_1_1detail_1a6f44eb79b01ca27d780e15e8fc1287ae">cast</link> = event-&gt;Cast&lt;EventName&gt;()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespace_header_tech_1_1_events_1_1detail_1aa130068865141ec36662732ba0fb330a"/>    <section>
    <title>__declspec()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>__declspec</primary><secondary>HeaderTech::Events::detail</secondary></indexterm>
<indexterm><primary>HeaderTech::Events::detail</primary><secondary>__declspec</secondary></indexterm>
<computeroutput>template&lt;EventType EventName, typename EventFunction &gt; </computeroutput><para><computeroutput>HeaderTech::Events::detail::__declspec (noalias ) const<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 44 of file EventSubscription.inl.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1_1detail_1ad20bf18f6da5896af7bc149aaaff6a1f"/>    <section>
    <title>__declspec()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>__declspec</primary><secondary>HeaderTech::Events::detail</secondary></indexterm>
<indexterm><primary>HeaderTech::Events::detail</primary><secondary>__declspec</secondary></indexterm>
<computeroutput>template&lt;EventType EventClass&gt; </computeroutput><para><computeroutput>HeaderTech::Events::detail::__declspec (noalias )<computeroutput>[noexcept]</computeroutput></computeroutput></para><para>
Definition at line 13 of file Event.inl.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1_1detail_1abc085866ca019e174383b4a05e192fb9"/>    <section>
    <title>__declspec()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>__declspec</primary><secondary>HeaderTech::Events::detail</secondary></indexterm>
<indexterm><primary>HeaderTech::Events::detail</primary><secondary>__declspec</secondary></indexterm>
<computeroutput>template&lt;EventType EventName, typename EventCallback &gt; </computeroutput><para><computeroutput>struct HeaderTech::Events::detail::__declspec (novtable )</computeroutput></para><para>
Definition at line 91 of file EventSubscription.inl.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1_1detail_1ace13bc1197f21344a435bf289ba95da5"/>    <section>
    <title>if()</title>
<indexterm><primary>if</primary><secondary>HeaderTech::Events::detail</secondary></indexterm>
<indexterm><primary>HeaderTech::Events::detail</primary><secondary>if</secondary></indexterm>
<para><computeroutput>HeaderTech::Events::detail::if (<link linkend="_namespace_header_tech_1_1_events_1_1detail_1a6f44eb79b01ca27d780e15e8fc1287ae">cast</link> )</computeroutput></para><para>
Definition at line 60 of file EventSubscription.inl.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_namespace_header_tech_1_1_events_1_1detail_1a749cb59b304c739d73f90e65010a40d6"/>    <section>
    <title>base</title>
<indexterm><primary>base</primary><secondary>HeaderTech::Events::detail</secondary></indexterm>
<indexterm><primary>HeaderTech::Events::detail</primary><secondary>base</secondary></indexterm>
<para><computeroutput>auto HeaderTech::Events::detail::base = static_cast&lt;Caller *&gt;(function)</computeroutput></para><para>
Definition at line 58 of file EventSubscription.inl.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1_1detail_1a6f44eb79b01ca27d780e15e8fc1287ae"/>    <section>
    <title>cast</title>
<indexterm><primary>cast</primary><secondary>HeaderTech::Events::detail</secondary></indexterm>
<indexterm><primary>HeaderTech::Events::detail</primary><secondary>cast</secondary></indexterm>
<para><computeroutput>auto HeaderTech::Events::detail::cast = event-&gt;Cast&lt;EventName&gt;()</computeroutput></para><para>
Definition at line 59 of file EventSubscription.inl.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1_1detail_1afe6bc6e32140bfb1db6be0bad6914b7f"/>    <section>
    <title>noexcept</title>
<indexterm><primary>noexcept</primary><secondary>HeaderTech::Events::detail</secondary></indexterm>
<indexterm><primary>HeaderTech::Events::detail</primary><secondary>noexcept</secondary></indexterm>
<para><computeroutput>const <link linkend="_namespace_header_tech_1_1_events_1af202cf6097b6a15cbdd5d4090c7c5368">EventPtr</link>&amp; event HeaderTech::Events::detail::noexcept</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting>{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">using</emphasis>&#32;Caller&#32;=&#32;SubscriptionBase&lt;EventName,&#32;EventFunction&gt;
</programlisting><para>
Definition at line 54 of file EventSubscription.inl.</para>
</section>
</section>
</section>
