<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_header_tech_1_1_logging" xml:lang="en-US">
<title>HeaderTech::Logging Namespace Reference</title>
<indexterm><primary>HeaderTech::Logging</primary></indexterm>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para> <link linkend="_namespace_header_tech_1_1_logging_1_1detail">detail</link></para>
</listitem>
            <listitem><para> <link linkend="_namespace_header_tech_1_1_logging_1_1details">details</link></para>
</listitem>
            <listitem><para> <link linkend="_namespace_header_tech_1_1_logging_1_1_scoped">Scoped</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_header_tech_1_1_logging_1_1_file_sink">FileSink</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_header_tech_1_1_logging_1_1_profiler_sink">ProfilerSink</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_logging_1a9d7d08ed24a467533059b3daff520e35">FileSinkMt</link> = <link linkend="_class_header_tech_1_1_logging_1_1_file_sink">FileSink</link>&lt; std::mutex &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> = std::shared_ptr&lt; spdlog::logger &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_logging_1a992a5255ca853efd8c90e4f6b1dfd8be">ProfilerSinkMt</link> = <link linkend="_class_header_tech_1_1_logging_1_1_profiler_sink">ProfilerSink</link>&lt; std::mutex &gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> <link linkend="_namespace_header_tech_1_1_logging_1a66a2ae65ce784686baa4d1b753d7c7b4">make_logger_async</link> (const std::string &amp;name)</para>
</listitem>
            <listitem><para><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> <link linkend="_namespace_header_tech_1_1_logging_1a3de917fdaec21da46d158605cd46e56d">get_or_make_logger_async</link> (const std::string &amp;name)</para>
</listitem>
            <listitem><para>template&lt;typename Name &gt; </para><para><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> <link linkend="_namespace_header_tech_1_1_logging_1a43185012d80ad42ba8eaf93db659065d">make_logger_async</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename Name &gt; </para><para><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> <link linkend="_namespace_header_tech_1_1_logging_1a7550444465936c29c2d924fb51005763">get_or_make_logger_async</link> ()</para>
</listitem>
            <listitem><para><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> <link linkend="_namespace_header_tech_1_1_logging_1a361837a4e70d9e6e344585a089d7714c">make_logger</link> (const std::string &amp;name)</para>
</listitem>
            <listitem><para><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> <link linkend="_namespace_header_tech_1_1_logging_1ae7535e4336cd5448c3b503c809d53fc5">get_or_make_logger</link> (const std::string &amp;name)</para>
</listitem>
            <listitem><para>template&lt;typename Name &gt; </para><para><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> <link linkend="_namespace_header_tech_1_1_logging_1a34bf7eb49af681528382063eeb8448e0">make_logger</link> ()</para>
</listitem>
            <listitem><para>template&lt;typename Name &gt; </para><para><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> <link linkend="_namespace_header_tech_1_1_logging_1a82b5ab8751b124d04b4b6adcb4336ec0">get_or_make_logger</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_namespace_header_tech_1_1_logging_1a9d7d08ed24a467533059b3daff520e35"/>    <section>
    <title>FileSinkMt</title>
<indexterm><primary>FileSinkMt</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>FileSinkMt</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_header_tech_1_1_logging_1a9d7d08ed24a467533059b3daff520e35">HeaderTech::Logging::FileSinkMt</link> = typedef <link linkend="_class_header_tech_1_1_logging_1_1_file_sink">FileSink</link>&lt;std::mutex&gt;</computeroutput></para><para>
Definition at line 51 of file FileSink.h.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c"/>    <section>
    <title>Logger</title>
<indexterm><primary>Logger</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>Logger</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">HeaderTech::Logging::Logger</link> = typedef std::shared_ptr&lt;spdlog::logger&gt;</computeroutput></para><para>
Definition at line 14 of file Logger.h.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_logging_1a992a5255ca853efd8c90e4f6b1dfd8be"/>    <section>
    <title>ProfilerSinkMt</title>
<indexterm><primary>ProfilerSinkMt</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>ProfilerSinkMt</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_header_tech_1_1_logging_1a992a5255ca853efd8c90e4f6b1dfd8be">HeaderTech::Logging::ProfilerSinkMt</link> = typedef <link linkend="_class_header_tech_1_1_logging_1_1_profiler_sink">ProfilerSink</link>&lt;std::mutex&gt;</computeroutput></para><para>
Definition at line 26 of file ProfilerSink.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespace_header_tech_1_1_logging_1a82b5ab8751b124d04b4b6adcb4336ec0"/>    <section>
    <title>get_or_make_logger()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>get_or_make_logger</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>get_or_make_logger</secondary></indexterm>
<computeroutput>template&lt;typename Name &gt; </computeroutput><para><computeroutput><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> HeaderTech::Logging::get_or_make_logger ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 147 of file Logger.inl.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_header_tech_1_1_logging_a82b5ab8751b124d04b4b6adcb4336ec0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_logging_1ae7535e4336cd5448c3b503c809d53fc5"/>    <section>
    <title>get_or_make_logger()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>get_or_make_logger</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>get_or_make_logger</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> HeaderTech::Logging::get_or_make_logger (const std::string &amp; name)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 137 of file Logger.inl.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_header_tech_1_1_logging_ae7535e4336cd5448c3b503c809d53fc5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_header_tech_1_1_logging_ae7535e4336cd5448c3b503c809d53fc5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_logging_1a7550444465936c29c2d924fb51005763"/>    <section>
    <title>get_or_make_logger_async()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>get_or_make_logger_async</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>get_or_make_logger_async</secondary></indexterm>
<computeroutput>template&lt;typename Name &gt; </computeroutput><para><computeroutput><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> HeaderTech::Logging::get_or_make_logger_async ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 120 of file Logger.inl.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_header_tech_1_1_logging_a7550444465936c29c2d924fb51005763_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_logging_1a3de917fdaec21da46d158605cd46e56d"/>    <section>
    <title>get_or_make_logger_async()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>get_or_make_logger_async</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>get_or_make_logger_async</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> HeaderTech::Logging::get_or_make_logger_async (const std::string &amp; name)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 110 of file Logger.inl.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_header_tech_1_1_logging_a3de917fdaec21da46d158605cd46e56d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_header_tech_1_1_logging_a3de917fdaec21da46d158605cd46e56d_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_logging_1a34bf7eb49af681528382063eeb8448e0"/>    <section>
    <title>make_logger()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>make_logger</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>make_logger</secondary></indexterm>
<computeroutput>template&lt;typename Name &gt; </computeroutput><para><computeroutput><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> HeaderTech::Logging::make_logger ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 132 of file Logger.inl.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_header_tech_1_1_logging_a34bf7eb49af681528382063eeb8448e0_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_logging_1a361837a4e70d9e6e344585a089d7714c"/>    <section>
    <title>make_logger()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>make_logger</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>make_logger</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> HeaderTech::Logging::make_logger (const std::string &amp; name)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 125 of file Logger.inl.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_header_tech_1_1_logging_a361837a4e70d9e6e344585a089d7714c_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_logging_1a43185012d80ad42ba8eaf93db659065d"/>    <section>
    <title>make_logger_async()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>make_logger_async</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>make_logger_async</secondary></indexterm>
<computeroutput>template&lt;typename Name &gt; </computeroutput><para><computeroutput><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> HeaderTech::Logging::make_logger_async ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 105 of file Logger.inl.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_header_tech_1_1_logging_a43185012d80ad42ba8eaf93db659065d_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_logging_1a66a2ae65ce784686baa4d1b753d7c7b4"/>    <section>
    <title>make_logger_async()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>make_logger_async</primary><secondary>HeaderTech::Logging</secondary></indexterm>
<indexterm><primary>HeaderTech::Logging</primary><secondary>make_logger_async</secondary></indexterm>
<para><computeroutput><link linkend="_namespace_header_tech_1_1_logging_1a0621070397f6df5586f73f0e6014279c">Logger</link> HeaderTech::Logging::make_logger_async (const std::string &amp; name)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 98 of file Logger.inl.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespace_header_tech_1_1_logging_a66a2ae65ce784686baa4d1b753d7c7b4_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
