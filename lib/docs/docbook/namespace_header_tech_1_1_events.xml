<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespace_header_tech_1_1_events" xml:lang="en-US">
<title>HeaderTech::Events Namespace Reference</title>
<indexterm><primary>HeaderTech::Events</primary></indexterm>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para> <link linkend="_namespace_header_tech_1_1_events_1_1detail">detail</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_header_tech_1_1_events_1_1_event_id_checker">EventIdChecker</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_header_tech_1_1_events_1_1_event_priority_checker">EventPriorityChecker</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_header_tech_1_1_events_1_1_event_less">EventLess</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_header_tech_1_1_events_1_1_event_dispatcher">EventDispatcher</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_events_1a25db90bd1763c831e20c289fab9394b4">EventId</link> = std::uint64_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_events_1a94ce76b1ca57f459e666e4bd3152652d">EventPriority</link> = std::uint8_t</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_events_1af202cf6097b6a15cbdd5d4090c7c5368">EventPtr</link> = std::shared_ptr&lt; Event &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_events_1a42f608b61fa21b30f087646b9f711102">EventQueue</link> = std::priority_queue&lt; <link linkend="_namespace_header_tech_1_1_events_1af202cf6097b6a15cbdd5d4090c7c5368">EventPtr</link>, std::vector&lt; <link linkend="_namespace_header_tech_1_1_events_1af202cf6097b6a15cbdd5d4090c7c5368">EventPtr</link> &gt;, <link linkend="_struct_header_tech_1_1_events_1_1_event_less">EventLess</link> &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_events_1a4319a964b59614ae7fa48dbb8fdb7592">EventSubscriptionPtr</link> = std::shared_ptr&lt; EventSubscription &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_events_1a971000705287ab8e02917dfacca13d90">EventSubscriptionList</link> = std::vector&lt; <link linkend="_namespace_header_tech_1_1_events_1a4319a964b59614ae7fa48dbb8fdb7592">EventSubscriptionPtr</link> &gt;</para>
</listitem>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_events_1ac104cff9035f73e4f91af5386983ceda">EventSubscriptionMap</link> = std::unordered_map&lt; <link linkend="_namespace_header_tech_1_1_events_1a25db90bd1763c831e20c289fab9394b4">EventId</link>, <link linkend="_namespace_header_tech_1_1_events_1a971000705287ab8e02917dfacca13d90">EventSubscriptionList</link> &gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_namespace_header_tech_1_1_events_1aede8959b92a38f7c52795b12e3608782">__declspec</link> (novtable) Event</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const <link linkend="_namespace_header_tech_1_1_events_1a94ce76b1ca57f459e666e4bd3152652d">EventPriority</link> <link linkend="_namespace_header_tech_1_1_events_1a34d21d0a8384e658b58df46195617c09">MAX_EVENT_PRIORITY</link> = 0xff</para>
</listitem>
            <listitem><para>template&lt;class EventClass &gt; </para><para>concept <link linkend="_namespace_header_tech_1_1_events_1a45d4a069e4c067c152e26b7f9457828a">EventType</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_namespace_header_tech_1_1_events_1a25db90bd1763c831e20c289fab9394b4"/>    <section>
    <title>EventId</title>
<indexterm><primary>EventId</primary><secondary>HeaderTech::Events</secondary></indexterm>
<indexterm><primary>HeaderTech::Events</primary><secondary>EventId</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_header_tech_1_1_events_1a25db90bd1763c831e20c289fab9394b4">HeaderTech::Events::EventId</link> = typedef std::uint64_t</computeroutput></para><para>
Definition at line 16 of file Event.h.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1a94ce76b1ca57f459e666e4bd3152652d"/>    <section>
    <title>EventPriority</title>
<indexterm><primary>EventPriority</primary><secondary>HeaderTech::Events</secondary></indexterm>
<indexterm><primary>HeaderTech::Events</primary><secondary>EventPriority</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_header_tech_1_1_events_1a94ce76b1ca57f459e666e4bd3152652d">HeaderTech::Events::EventPriority</link> = typedef std::uint8_t</computeroutput></para><para>
Definition at line 17 of file Event.h.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1af202cf6097b6a15cbdd5d4090c7c5368"/>    <section>
    <title>EventPtr</title>
<indexterm><primary>EventPtr</primary><secondary>HeaderTech::Events</secondary></indexterm>
<indexterm><primary>HeaderTech::Events</primary><secondary>EventPtr</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_header_tech_1_1_events_1af202cf6097b6a15cbdd5d4090c7c5368">HeaderTech::Events::EventPtr</link> = typedef std::shared_ptr&lt;Event&gt;</computeroutput></para><para>
Definition at line 22 of file Event.h.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1a42f608b61fa21b30f087646b9f711102"/>    <section>
    <title>EventQueue</title>
<indexterm><primary>EventQueue</primary><secondary>HeaderTech::Events</secondary></indexterm>
<indexterm><primary>HeaderTech::Events</primary><secondary>EventQueue</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_header_tech_1_1_events_1a42f608b61fa21b30f087646b9f711102">HeaderTech::Events::EventQueue</link> = typedef std::priority_queue&lt;<link linkend="_namespace_header_tech_1_1_events_1af202cf6097b6a15cbdd5d4090c7c5368">EventPtr</link>, std::vector&lt;<link linkend="_namespace_header_tech_1_1_events_1af202cf6097b6a15cbdd5d4090c7c5368">EventPtr</link>&gt;, <link linkend="_struct_header_tech_1_1_events_1_1_event_less">EventLess</link>&gt;</computeroutput></para><para>
Definition at line 83 of file Event.h.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1a971000705287ab8e02917dfacca13d90"/>    <section>
    <title>EventSubscriptionList</title>
<indexterm><primary>EventSubscriptionList</primary><secondary>HeaderTech::Events</secondary></indexterm>
<indexterm><primary>HeaderTech::Events</primary><secondary>EventSubscriptionList</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_header_tech_1_1_events_1a971000705287ab8e02917dfacca13d90">HeaderTech::Events::EventSubscriptionList</link> = typedef std::vector&lt;<link linkend="_namespace_header_tech_1_1_events_1a4319a964b59614ae7fa48dbb8fdb7592">EventSubscriptionPtr</link>&gt;</computeroutput></para><para>
Definition at line 40 of file EventSubscription.h.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1ac104cff9035f73e4f91af5386983ceda"/>    <section>
    <title>EventSubscriptionMap</title>
<indexterm><primary>EventSubscriptionMap</primary><secondary>HeaderTech::Events</secondary></indexterm>
<indexterm><primary>HeaderTech::Events</primary><secondary>EventSubscriptionMap</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_header_tech_1_1_events_1ac104cff9035f73e4f91af5386983ceda">HeaderTech::Events::EventSubscriptionMap</link> = typedef std::unordered_map&lt;<link linkend="_namespace_header_tech_1_1_events_1a25db90bd1763c831e20c289fab9394b4">EventId</link>, <link linkend="_namespace_header_tech_1_1_events_1a971000705287ab8e02917dfacca13d90">EventSubscriptionList</link>&gt;</computeroutput></para><para>
Definition at line 41 of file EventSubscription.h.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1a4319a964b59614ae7fa48dbb8fdb7592"/>    <section>
    <title>EventSubscriptionPtr</title>
<indexterm><primary>EventSubscriptionPtr</primary><secondary>HeaderTech::Events</secondary></indexterm>
<indexterm><primary>HeaderTech::Events</primary><secondary>EventSubscriptionPtr</secondary></indexterm>
<para><computeroutput>using <link linkend="_namespace_header_tech_1_1_events_1a4319a964b59614ae7fa48dbb8fdb7592">HeaderTech::Events::EventSubscriptionPtr</link> = typedef std::shared_ptr&lt;EventSubscription&gt;</computeroutput></para><para>
Definition at line 39 of file EventSubscription.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_namespace_header_tech_1_1_events_1aede8959b92a38f7c52795b12e3608782"/>    <section>
    <title>__declspec()</title>
<indexterm><primary>__declspec</primary><secondary>HeaderTech::Events</secondary></indexterm>
<indexterm><primary>HeaderTech::Events</primary><secondary>__declspec</secondary></indexterm>
<para><computeroutput>class HeaderTech::Events::__declspec (novtable )</computeroutput></para><para>
Definition at line 46 of file Event.h.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_namespace_header_tech_1_1_events_1a45d4a069e4c067c152e26b7f9457828a"/>    <section>
    <title>EventType</title>
<indexterm><primary>EventType</primary><secondary>HeaderTech::Events</secondary></indexterm>
<indexterm><primary>HeaderTech::Events</primary><secondary>EventType</secondary></indexterm>
<computeroutput>template&lt;class EventClass &gt; </computeroutput><para><computeroutput>concept HeaderTech::Events::EventType</computeroutput></para><emphasis role="strong">Initial value:</emphasis><programlisting>=&#32;requires(EventClass&#32;event)&#32;{
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;EventIdChecker&lt;EventClass&gt;{}(event)&#32;}&#32;-&gt;&#32;std::convertible_to&lt;EventId&gt;;
&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;EventPriorityChecker&lt;EventClass&gt;{}(event)&#32;}&#32;-&gt;&#32;std::convertible_to&lt;EventPriority&gt;;
&#32;&#32;&#32;&#32;}
</programlisting><para>
Definition at line 46 of file Event.h.</para>
    </section><anchor xml:id="_namespace_header_tech_1_1_events_1a34d21d0a8384e658b58df46195617c09"/>    <section>
    <title>MAX_EVENT_PRIORITY</title>
<indexterm><primary>MAX_EVENT_PRIORITY</primary><secondary>HeaderTech::Events</secondary></indexterm>
<indexterm><primary>HeaderTech::Events</primary><secondary>MAX_EVENT_PRIORITY</secondary></indexterm>
<para><computeroutput>const <link linkend="_namespace_header_tech_1_1_events_1a94ce76b1ca57f459e666e4bd3152652d">EventPriority</link> HeaderTech::Events::MAX_EVENT_PRIORITY = 0xff</computeroutput></para><para>
Definition at line 18 of file Event.h.</para>
</section>
</section>
</section>
