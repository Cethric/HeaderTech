<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__logger_8inl" xml:lang="en-US">
<title>logging/inc/Logger.inl File Reference</title>
<indexterm><primary>logging/inc/Logger.inl</primary></indexterm>
<programlisting>#include &lt;Logger.h&gt;
#include &lt;ProfilerSink.h&gt;
#include &lt;FileSink.h&gt;
#include &lt;vector&gt;
#include &lt;spdlog/async.h&gt;
#include &lt;spdlog/sinks/stdout_color_sinks.h&gt;
#include &lt;spdlog/sinks/basic_file_sink.h&gt;
#include &lt;spdlog/sinks/dist_sink.h&gt;
#include &lt;ctti/detailed_nameof.hpp&gt;
</programlisting>Include dependency graph for Logger.inl:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_logger_8inl__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_logger_8inl__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_header_tech_1_1_logging_1_1detail_1_1_sink_struct">HeaderTech::Logging::detail::SinkStruct</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para> <link linkend="_namespace_header_tech">HeaderTech</link></para>
</listitem>
            <listitem><para> <link linkend="_namespace_header_tech_1_1_logging">HeaderTech::Logging</link></para>
</listitem>
            <listitem><para> <link linkend="_namespace_header_tech_1_1_logging_1_1detail">HeaderTech::Logging::detail</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="__logger_8inl_1ab444fe050db4241ee0cc107d860864e3">HEADERTECH_LOGGER_INL</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>using <link linkend="_namespace_header_tech_1_1_logging_1_1detail_1a0e372acc76fd78d750b690b5d2cd39f3">HeaderTech::Logging::detail::SinkArray</link> = std::vector&lt; spdlog::sink_ptr &gt;</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>Logger <link linkend="_namespace_header_tech_1_1_logging_1a66a2ae65ce784686baa4d1b753d7c7b4">HeaderTech::Logging::make_logger_async</link> (const std::string &amp;name)</para>
</listitem>
            <listitem><para>template&lt;typename Name &gt; </para><para>Logger <link linkend="_namespace_header_tech_1_1_logging_1a43185012d80ad42ba8eaf93db659065d">HeaderTech::Logging::make_logger_async</link> ()</para>
</listitem>
            <listitem><para>Logger <link linkend="_namespace_header_tech_1_1_logging_1a3de917fdaec21da46d158605cd46e56d">HeaderTech::Logging::get_or_make_logger_async</link> (const std::string &amp;name)</para>
</listitem>
            <listitem><para>template&lt;typename Name &gt; </para><para>Logger <link linkend="_namespace_header_tech_1_1_logging_1a7550444465936c29c2d924fb51005763">HeaderTech::Logging::get_or_make_logger_async</link> ()</para>
</listitem>
            <listitem><para>Logger <link linkend="_namespace_header_tech_1_1_logging_1a361837a4e70d9e6e344585a089d7714c">HeaderTech::Logging::make_logger</link> (const std::string &amp;name)</para>
</listitem>
            <listitem><para>template&lt;typename Name &gt; </para><para>Logger <link linkend="_namespace_header_tech_1_1_logging_1a34bf7eb49af681528382063eeb8448e0">HeaderTech::Logging::make_logger</link> ()</para>
</listitem>
            <listitem><para>Logger <link linkend="_namespace_header_tech_1_1_logging_1ae7535e4336cd5448c3b503c809d53fc5">HeaderTech::Logging::get_or_make_logger</link> (const std::string &amp;name)</para>
</listitem>
            <listitem><para>template&lt;typename Name &gt; </para><para>Logger <link linkend="_namespace_header_tech_1_1_logging_1a82b5ab8751b124d04b4b6adcb4336ec0">HeaderTech::Logging::get_or_make_logger</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="__logger_8inl_1ab444fe050db4241ee0cc107d860864e3"/>    <section>
    <title>HEADERTECH_LOGGER_INL</title>
<indexterm><primary>HEADERTECH_LOGGER_INL</primary><secondary>Logger.inl</secondary></indexterm>
<indexterm><primary>Logger.inl</primary><secondary>HEADERTECH_LOGGER_INL</secondary></indexterm>
<para><computeroutput>#define HEADERTECH_LOGGER_INL</computeroutput></para><para>
Definition at line 6 of file Logger.inl.</para>
</section>
</section>
</section>
