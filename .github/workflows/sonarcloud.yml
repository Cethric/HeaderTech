name: SonarCloud
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: Debug
      BUILD_DIR: ${{github.workspace}}/cmake_build_debug
      SONARQUBE_URL: "https://sonarcloud.io"
      SONARQUBE_PATH: ${{github.workspace}}/.sonar
      SONARQUBE_EXE: ${{github.workspace}}/.sonar/build-wrapper-linux-x86-64
    steps:
      - uses: BSFishy/pip-action@v1
        with:
          packages: Jinja2<3.0

      - name: Install dependencies
        shell: bash
        run: |
          sudo apt-get install xorg-dev clang zip unzip
          wget "$SONARQUBE_URL/static/cpp/build-wrapper-linux-x86.zip"
          unzip build-wrapper-linux-x86.zip -d $SONARQUBE_PATH -j
          ls -la ${{github.workspace}}/.sonar


      - uses: actions/checkout@main
      - uses: ./.github/actions/prepare-external-action

      - name: Create Build Environment
        shell: bash
        run: |
          cmake -E make_directory $BUILD_DIR

      - name: Configure CMake
        shell: bash
        env:
          CC: /usr/bin/clang
          CXX: /usr/bin/clang++
        working-directory: ${{github.workspace}}/cmake_build_debug
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON -DBUILD_TESTING=ON ..
          $SONARQUBE_EXE --out-dir ${{github.workspace}}/cmake_build_debug/bw-outputs cmake --build . --target Editor --config $BUILD_TYPE
          ls -la ${{github.workspace}}/cmake_build_debug/bw-outputs

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: ${{github.workspace}}
          args: >
            -Dsonar.cfamily.build-wrapper-output=${{github.workspace}}/cmake_build_debug/bw-outputs
            -Dsonar.verbose=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
