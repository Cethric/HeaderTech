name: SonarCloud
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: Debug
      BUILD_DIR: ${{github.workspace}}/cmake_build_debug
      SONAR_SCANNER_VERSION: 4.6.1.2450
      SONAR_SERVER_URL: "https://sonarcloud.io"
      SONARQUBE_PATH: ~/.sonar
      BUILD_WRAPPER_OUTPUT: ${{github.workspace}}/bw-outputs
    steps:
      - uses: actions/checkout@main
      - uses: ./.github/actions/prepare-external-action

      - uses: BSFishy/pip-action@v1
        with:
          packages: Jinja2<3.0

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install dependencies
        env:
          SONAR_SCANNER_DOWNLOAD_ZIP: sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
          SONAR_SCANNER_DOWNLOAD_URL: https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${{ env.SONAR_SCANNER_VERSION }}-linux.zip
          SONAR_BUILD_WRAPPER_DOWNLOAD_ZIP: build-wrapper-linux-x86.zip
          SONAR_BUILD_WRAPPER_DOWNLOAD_URL: ${{ env.SONAR_SERVER_URL }}/static/cpp/build-wrapper-linux-x86.zip
        shell: bash
        run: |
          sudo apt-get install xorg-dev clang zip unzip
          wget $SONAR_SCANNER_DOWNLOAD_URL -O $SONAR_SCANNER_DOWNLOAD_ZIP
          wget $SONAR_BUILD_WRAPPER_DOWNLOAD_URL -O $SONAR_BUILD_WRAPPER_DOWNLOAD_ZIP
          unzip $SONAR_SCANNER_DOWNLOAD_ZIP -d $SONARQUBE_PATH
          unzip $SONAR_BUILD_WRAPPER_DOWNLOAD_ZIP -d $SONARQUBE_PATH
          echo "$HOME/.sonar/sonar-scanner-${{ env.SONAR_SCANNER_VERSION }}-linux/bin" >> $GITHUB_PATH
          echo "$HOME/.sonar/build-wrapper-linux-x86" >> $GITHUB_PATH


      - name: Create Build Environment
        shell: bash
        run: |
          cmake -E make_directory $BUILD_DIR

      - name: Configure CMake
        shell: bash
        env:
          CC: /usr/bin/clang
          CXX: /usr/bin/clang++
        working-directory: ${{github.workspace}}/cmake_build_debug
        run: |
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON -DBUILD_TESTING=ON ..
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUTPUT }} cmake --build . --target Editor --config $BUILD_TYPE
          cat ${{ env.BUILD_WRAPPER_OUTPUT }}/build-wrapper-dump.json

      - name: SonarCloud Scan
        shell: bash
        run: |
          sonar-scanner --define sonar.host.url="${{ env.SONAR_SERVER_URL }}" --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUTPUT }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
