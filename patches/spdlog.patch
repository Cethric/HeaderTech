:160000 160000 c858b14 c858b14 M	ext/spdlog
 ext/spdlog | 0
 1 file changed, 0 insertions(+), 0 deletions(-)

Submodule ext/spdlog contains modified content
diff --git a/ext/spdlog/include/spdlog/common-inl.h b/ext/spdlog/include/spdlog/common-inl.h
index c3e99222..5fa4e5d9 100644
--- a/ext/spdlog/include/spdlog/common-inl.h
+++ b/ext/spdlog/include/spdlog/common-inl.h
@@ -56,7 +56,7 @@ SPDLOG_INLINE spdlog_ex::spdlog_ex(std::string msg)
 SPDLOG_INLINE spdlog_ex::spdlog_ex(const std::string &msg, int last_errno)
 {
     memory_buf_t outbuf;
-    fmt::format_system_error(outbuf, last_errno, msg);
+    fmt::format_system_error(outbuf, last_errno, msg.c_str());
     msg_ = fmt::to_string(outbuf);
 }
 
diff --git a/ext/spdlog/include/spdlog/logger.h b/ext/spdlog/include/spdlog/logger.h
index 28e7dffd..e84bd79e 100644
--- a/ext/spdlog/include/spdlog/logger.h
+++ b/ext/spdlog/include/spdlog/logger.h
@@ -327,7 +327,7 @@ protected:
 
     // common implementation for after templated public api has been resolved
     template<typename FormatString, typename... Args>
-    void log_(source_loc loc, level::level_enum lvl, const FormatString &fmt, Args &&...args)
+    void log_(source_loc loc, level::level_enum lvl, FormatString &&fmt, Args &&...args)
     {
         bool log_enabled = should_log(lvl);
         bool traceback_enabled = tracer_.enabled();
@@ -338,7 +338,7 @@ protected:
         SPDLOG_TRY
         {
             memory_buf_t buf;
-            fmt::format_to(buf, fmt, std::forward<Args>(args)...);
+            fmt::format_to(buf, std::forward<FormatString>(fmt), std::forward<Args>(args)...);
             details::log_msg log_msg(loc, name_, lvl, string_view_t(buf.data(), buf.size()));
             log_it_(log_msg, log_enabled, traceback_enabled);
         }
